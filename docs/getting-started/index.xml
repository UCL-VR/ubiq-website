<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on</title><link>https://ubiq.online/docs/getting-started/</link><description>Recent content in Getting Started on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Thu, 12 Nov 2020 20:10:52 +0100</lastBuildDate><atom:link href="https://ubiq.online/docs/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Ubiq</title><link>https://ubiq.online/docs/getting-started/getting-ubiq/</link><pubDate>Thu, 12 Nov 2020 20:15:31 +0100</pubDate><guid>https://ubiq.online/docs/getting-started/getting-ubiq/</guid><description>Ubiq can be downloaded from the UCL VR Github: https://github.com/UCL-VR/ubiq
WebRTC Ubiq relies on WebRTC for voice and video chat. The repository includes binaries for Windows, Linux, Android and MacOS, so you do not need to download anything else. The project to build the binaries though can also be found on the UCL VR Github.</description></item><item><title>Setting Up Ubiq for XR</title><link>https://ubiq.online/docs/getting-started/setting-up-vr/</link><pubDate>Sat, 05 Feb 2022 20:40:38 +0100</pubDate><guid>https://ubiq.online/docs/getting-started/setting-up-vr/</guid><description>Oculus or Windows Mixed Reality (Desktop) In Unity, open the project settings window (Edit/Project Settings&amp;hellip;) and go to the XR Plug-in Management menu.
Enable the plug-in here - just tick either the Oculus or Windows Mixed Reality box. Also tick the box for &amp;ldquo;Initialize XR on Startup&amp;rdquo;.
OpenVR (Desktop) Note that while rendering and tracking works well, this subsystem is currently missing input from the hand controllers.</description></item><item><title>Creating Networked Objects</title><link>https://ubiq.online/docs/getting-started/creating-networked-objects/</link><pubDate>Thu, 12 Nov 2020 20:12:04 +0100</pubDate><guid>https://ubiq.online/docs/getting-started/creating-networked-objects/</guid><description>Building a Basic Networked Object Create a new Unity Script and add it to your GameObject that you want to have networked. You can do this via the inspector by clicking on &amp;ldquo;Add Component&amp;rdquo; and typing the new name. Include Ubiq.Messaging Inherit from INetworkObject and INetworkComponent Implement their interfaces In Visual Studio this can be done through the context menu. Right Click -&amp;gt; Quick Actions and Refactoring -&amp;gt; Implement interface Note: This will only give you the stubs.</description></item><item><title>Object Spawning</title><link>https://ubiq.online/docs/getting-started/object-spawning/</link><pubDate>Thu, 12 Nov 2020 20:12:04 +0100</pubDate><guid>https://ubiq.online/docs/getting-started/object-spawning/</guid><description>Spawning Objects To spawn an object in the local and all remote clients at the same time, there is a NetworkSpawner.
There are two ways to spawn objects:
NetworkSpawner.Spawn(…) Use this for objects that are not meant to be persistent. Objects spawned through this function can only be seen by players that are already connected. A new player that joins later will not see them.
NetworkSpawner.SpawnPersistent(…) Use this for objects that are meant to be persistent.</description></item><item><title>Ownership</title><link>https://ubiq.online/docs/getting-started/ownership/</link><pubDate>Thu, 12 Nov 2020 20:12:04 +0100</pubDate><guid>https://ubiq.online/docs/getting-started/ownership/</guid><description>Additional Object and Networking Functionalities Ownership With this networked object, you will notice that you cannot move them in the editor or change their colour. The reason for this is that both objects are sending each other their position and any change you make gets overwritten by the incoming messages before it can go out. This situation where two changes race against each other is called a &amp;ldquo;race condition&amp;rdquo;. One easy way to prevent this, is to give one of the network objects a flag that signals whether the object is owned by the local instance or controlled by a remote one.</description></item><item><title>Interaction with Ubiq XR</title><link>https://ubiq.online/docs/getting-started/interaction-ubiq-xr/</link><pubDate>Thu, 12 Nov 2020 20:12:04 +0100</pubDate><guid>https://ubiq.online/docs/getting-started/interaction-ubiq-xr/</guid><description>Making an Object Graspable If you want to have your object being grabbable with the user&amp;rsquo;s hands, you will have to inherit from IGraspable and implement Grasp(&amp;hellip;) and Release(&amp;hellip;).
Making an Object Usable If you want your object to do something when the user presses the trigger button while holding it, you need to inherit from IUsable and implement Use(&amp;hellip;) and UnUse(&amp;hellip;).</description></item><item><title>Servers and Rooms</title><link>https://ubiq.online/docs/getting-started/servers-rooms/</link><pubDate>Thu, 12 Nov 2020 20:12:04 +0100</pubDate><guid>https://ubiq.online/docs/getting-started/servers-rooms/</guid><description>Servers and Rooms Ubiq clients can connect directly to eachother, but most applications will use a room server.
The room server is a central service which clients connect to and use to rendezvous with eachother. A server can host multiple Rooms. Rooms are a collection of users in a scene, who can talk to eachother and exchange messages. The RoomClient is used to find, join and leave rooms.
The RoomClient must be provided with a server to connect to.</description></item><item><title>Testing with Local Loopback</title><link>https://ubiq.online/docs/getting-started/local-loopback/</link><pubDate>Thu, 12 Nov 2020 20:12:04 +0100</pubDate><guid>https://ubiq.online/docs/getting-started/local-loopback/</guid><description>Testing Networked Objects A local loopback scene is included in the Ubiq samples. Local loopback is helpful for testing your networked objects without needing to use any external applications. The scene contains two clients and a local server that is started when you play the scene.
The scene is in the Samples/Intro folder. To get started:
Click the play button. The local server is now started and you will see an avatar in one forest.</description></item><item><title>Logging</title><link>https://ubiq.online/docs/getting-started/logging/</link><pubDate>Thu, 12 Nov 2020 20:12:04 +0100</pubDate><guid>https://ubiq.online/docs/getting-started/logging/</guid><description>Ubiq has the ability to record, forward and store logs or events. Ubiq itself generates logs, and custom components can create them too.
For example, the logging system could be used to record the answers to a questionnaire, or the direction of a user&amp;rsquo;s gaze, and forward them to an experimentor.
This guide shows how to set up and log some simple data in the Hello World scene.
Log Flow Log events (such as answering a question) are generated by Event Loggers with a simple call, e.</description></item></channel></rss>