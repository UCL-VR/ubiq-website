<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Otto Olkonnen on</title><link>https://ubiq.online/contributors/otto-olkonnen/</link><description>Recent content in Otto Olkonnen on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Thu, 07 Dec 2023 10:00:00 +0000</lastBuildDate><atom:link href="https://ubiq.online/contributors/otto-olkonnen/index.xml" rel="self" type="application/rss+xml"/><item><title>Server Scalability at DS-RT 23</title><link>https://ubiq.online/blog/server-scalability-at-ds-rt-23/</link><pubDate>Thu, 07 Dec 2023 10:00:00 +0000</pubDate><guid>https://ubiq.online/blog/server-scalability-at-ds-rt-23/</guid><description>Ubiq is logically Peer to Peer, but when communicating over the public internet the Ubiq server is used as a hub. Messages from rooms are duplicated or &amp;ldquo;fanned-out&amp;rdquo;. This implementation is simple and robust, but can create a choke-point when large numbers of users congregate in one room: and this is what the paper is focused on.
To see why this is, and understand the paper&amp;rsquo;s goals, we need a wider view of scalability in social VR&amp;hellip;</description></item></channel></rss>